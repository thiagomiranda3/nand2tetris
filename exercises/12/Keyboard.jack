// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
 class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
		return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		return Memory.peek(24576);
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
		var char ch;
        
        let ch = Keyboard.readCharI();
		do Output.printChar(ch);
        
        return ch;
    }

	
    function char readCharI() {
		var char ch;
        
        let ch = 0;
		do Output.printChar(0);
        
        while(ch = 0) {
			let ch = Keyboard.keyPressed();
		}
		
		while(~(Keyboard.keyPressed() = 0)){
        }
        
		do Output.backSpace();
        
        return ch;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
		var String st;
		var int ich;
		var char ch;
		
		do Output.printString(message);
		
		let st = String.new(256);
		let ich = 0;
        let ch = Keyboard.readCharI();
        
		while(~(ch = String.newLine())) {
			if(ch = String.backSpace()) {
				if (ich > 0) {
					let ich = ich - 1;
					do st.eraseLastChar();
					do Output.printChar(32);
					do Output.backSpace();
					do Output.backSpace();
				}
			} else {
				if((ch<128) & (ch > 31)) {
					if(ich < 256){
						let ich = ich + 1;
						do st.appendChar(ch);
						do Output.printChar(ch);
					}
				}
            }
            
			let ch = Keyboard.readCharI();
		}
        
        do Output.printChar(32);
		do Output.println();
        
        return st;
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var String st;
        
		let st = Keyboard.readLine(message);
        
        return st.intValue();
    }
}
